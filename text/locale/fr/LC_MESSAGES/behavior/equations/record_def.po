# 
msgid ""
msgstr ""
"Project-Id-Version: Modelica by Example 0.2.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-11 17:23-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/behavior/equations/record_def.rst:6
msgid "Record Definitions"
msgstr ""

#: ../../source/behavior/equations/record_def.rst:8
msgid ""
"Earlier, we introduced the idea of a ``model`` definition.  Although we "
"haven't seen any yet, Modelica also includes a ``record`` type.  A "
"``record`` can have variables, just like a ``model``, but it is not allowed "
"to include equations.  Records are primarily used to group data together.  "
"But as we will see shortly, they are also very useful in describing the data"
" associated with :ref:`annotations`."
msgstr ""

#: ../../source/behavior/equations/record_def.rst:16
msgid "Syntax"
msgstr ""

#: ../../source/behavior/equations/record_def.rst:18
msgid ""
"The ``record`` definition looks essentially like a ``model`` definition, but"
" without any equations:"
msgstr ""

#: ../../source/behavior/equations/record_def.rst:27
msgid ""
"As with a ``model``, the definition starts and ends with the name of the "
"record being defined.  An explanation of the ``record`` can be included as a"
" string after the name.  All the variables associated with the record are "
"declared within the ``record`` definition."
msgstr ""

#: ../../source/behavior/equations/record_def.rst:32
msgid "The following are all examples of ``record`` definitions:"
msgstr ""

#: ../../source/behavior/equations/record_def.rst:48
msgid "Record Constructors"
msgstr ""

#: ../../source/behavior/equations/record_def.rst:1
msgid "record"
msgstr ""
