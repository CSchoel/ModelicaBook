# By default, all commands are done in the context of the mtiller/book-builder
# Docker image (unless the individual jobs override this)
image: mtiller/book-builder

variables:
    # Be sure to extract submodules
    GIT_SUBMODULE_STRATEGY: normal
    # Use this for performance reasons
    DOCKER_DRIVER: overlay2

# Cache the text/results and text/plots directories across jobs
cache:
    paths:
        - text/results
        - text/plots

# Needed for cases where we are running docker.  We use the 'docker' image
# but it depends on this service being present (not sure how/why).
services:
    - docker:dind

# The various stages
stages:
    - generating_results
    - installing_image_dependencies
    - building_image
    - publishing_image
    - generating_json
    - generating_ebooks
    - generating_site

generate_specs:
    stage: generating_results
    script:
        - (cd text; make specs)
        - (cd text; make results)
    artifacts:
        paths:
            - text/results/exes.tar.gz
            - text/plots

# We do this for all branches just to make sure there
# are no errors.
install_image_dependencies:
    image: node:10-jessie
    stage: installing_image_dependencies
    script:
        - make api_deps

# We do this for all branches just to make sure there are no errors
build_image:
    image: docker:stable
    stage: publishing_image
    only:
        - master
    script:
        - (cd api; docker build -t mtiller/book-server .)

# We only do this for the master branch
publish_image:
    image: docker:stable
    stage: publishing_image
    only:
        - master
    script:
        - docker login -u $DOCKER_USER -p $DOCKER_PASS
        - docker push mtiller/book-server

generate_json:
    stage: generating_json
    script:
        - (cd text; make json)
    artifacts:
        paths:
            - text/build/

generate_ebooks:
    stage: generating_ebooks
    script:
        - (cd text; make ebooks make pdf pdf-a4)
    artifacts:
        paths:
            - text/build/

generate_preview_site:
    image: node:10-jessie
    stage: generating_site
    except:
        - master
    script:
        - make ng_site
    artifacts:
        paths:
            - nextgen/out

generate_production_site:
    image: node:10-jessie
    stage: generating_site
    only:
        - master
    script:
        - make ng_site
    artifacts:
        paths:
            - nextgen/out
# generate_html:
#     stage: docs_html
#     script:
#         - (cd text; make dirhtml)
#     artifacts:
#         paths:
#             - text/build/
